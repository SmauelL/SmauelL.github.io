<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>php原理之对象的属性</title>
      <link href="//blog/php%E5%8E%9F%E7%90%86%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7.html"/>
      <url>//blog/php%E5%8E%9F%E7%90%86%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7.html</url>
      
        <content type="html"><![CDATA[<h2 id="对象的结构"><a href="#对象的结构" class="headerlink" title="对象的结构"></a>对象的结构</h2><p>在php中,一个对象,还是以一个zval做为载体的</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">typedef <span class="class"><span class="keyword">union</span> <span class="title">_zvalue_value</span> &#123;</span></span><br><span class="line">    long lval;</span><br><span class="line">    double dval;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        char *val;</span><br><span class="line">        int len;</span><br><span class="line">    &#125; str;</span><br><span class="line">    HashTable *ht;</span><br><span class="line">    zend_object_value obj;</span><br><span class="line">&#125; zvalue_value;</span><br></pre></td></tr></table></figure><p>如果,一个zval是对象,那么zvalue_value中的对象,就指向一个zend_object_value的实例。一个zend_object_value包含两个成员,一个是标识符(整形序号),表明了当前对象存储在全局对象列表的位置,另外还有一个zend_object_handlers指针,指向当前对象所属类的handlers(标准操作集合).<br>真正的对象实体,zend_object中,保存了如下的关键信息入口:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="selector-class">.ce</span>,zend_class_entry 类入口</span><br><span class="line"><span class="number">2</span><span class="selector-class">.properties</span>,hashTable普通属性集</span><br></pre></td></tr></table></figure><h2 id="对象的属性"><a href="#对象的属性" class="headerlink" title="对象的属性"></a>对象的属性</h2><p>如上所述,普通属性是一个hashTable,在PHP5以后,引入了访问权限控制,而访问权限属性,是通过属性名进行区分的(为此Zend引入了zend_mangle_property_name)</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>public 属性名</span><br><span class="line"><span class="number">2.</span>private \<span class="number">0</span>类名\<span class="number">0</span>属性名</span><br><span class="line"><span class="number">3.</span>protected \<span class="number">0</span>*\<span class="number">0</span>属性名</span><br></pre></td></tr></table></figure><p>PHP通过这种方式,实现了对属性访问权限的标识,所以我们如果想要访问对象的私有/保护属性可以:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_name1 = <span class="string">"private"</span>;</span><br><span class="line">    <span class="keyword">protected</span> $_name2 = <span class="string">"protected"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$test = <span class="keyword">new</span> Test();</span><br><span class="line">$arr = (<span class="keyword">array</span>)$test;</span><br><span class="line">var_dump($arr[<span class="string">"\0Test\0_name1"</span>]);</span><br><span class="line">var_dump($arr[<span class="string">"\0*\0_name2"</span>]);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">string(<span class="number">7</span>) <span class="string">"private"</span></span><br><span class="line">string(<span class="number">9</span>) <span class="string">"protected"</span></span><br></pre></td></tr></table></figure><p><code>参考自鸟哥博客</code><a href="http://www.laruence.com" target="_blank" rel="noopener">http://www.laruence.com</a></p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>composer报错zlib_decode()</title>
      <link href="//blog/composer%E6%8A%A5%E9%94%99zlib_decode().html"/>
      <url>//blog/composer%E6%8A%A5%E9%94%99zlib_decode().html</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>今天使用composer安装laravel遇到报错zlib_decode(),在此记录一下解决办法</p></blockquote><p>以前从来没有遇到的问题,报错的安装命令为</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">composer </span><span class="built_in">create-project</span>  <span class="string">laravel/</span><span class="string">laravel </span><span class="string">bjyblog </span><span class="built_in">--prefer-dist</span></span><br></pre></td></tr></table></figure><p>一直提示zlib_decode(),找了许多方法都没有效果。</p><a id="more"></a><p>然后我就机智的将<code>--prefer-dist</code>移了一下位置</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">composer </span><span class="built_in">create-project</span> <span class="built_in">--prefer-dist</span> <span class="string">laravel/</span><span class="string">laravel </span><span class="string">bjyblog</span></span><br></pre></td></tr></table></figure><p>这样就好了,网上有很多教程将<code>--prefer-dist</code>放到最后,希望大家不要踩坑。</p>]]></content>
      
      
      <categories>
          
          <category> composer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决mac command not found</title>
      <link href="//blog/%E8%A7%A3%E5%86%B3mac%20command%20not%20found.html"/>
      <url>//blog/%E8%A7%A3%E5%86%B3mac%20command%20not%20found.html</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>最近在配置mac的环境变量后,系统的所有命令都失效了,提示mac command not found,在此记录解决方法</p></blockquote><h2 id="1-先让命令暂时可用"><a href="#1-先让命令暂时可用" class="headerlink" title="1.先让命令暂时可用"></a>1.先让命令暂时可用</h2><p>命令如下</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=<span class="regexp">/usr/bin</span><span class="symbol">:/usr/sbin</span><span class="symbol">:/bin</span><span class="symbol">:/sbin</span><span class="symbol">:/usr/X11R6/bin</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>命令执行后不要关闭终端或者cd /usr/bin 下执行vi命令否则会再次失效  </p><h2 id="2-检查bash-profile文件"><a href="#2-检查bash-profile文件" class="headerlink" title="2.检查bash_profile文件"></a>2.检查bash_profile文件</h2><p>很有可能是你的PATH 环境变量设置错误，比如 <code>$PATH</code>漏了，我这里的错误是添加环境变量的时候没有使用<code>&quot;&quot;</code>双引号引起来，还有<code>=</code>等号后面有空格，不知道等号后面有空格会不会影响，加上双引号，去掉空格就可以了<code>PATH=$PATH:$PATH1</code> 可以写成这样的格式：<code>export PATH=/usr/local/msyql/bin:$PATH</code></p><h2 id="3-保存bash-profile文件"><a href="#3-保存bash-profile文件" class="headerlink" title="3.保存bash_profile文件"></a>3.保存bash_profile文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
